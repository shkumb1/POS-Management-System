<?xml version="1.0" encoding="UTF-8"?><testrun duration="812" footerText="Generated by IntelliJ IDEA on 2/3/23, 12:24 AM" name="ProductServiceTest">
    <count name="total" value="4"/>
    <count name="passed" value="4"/>
    <config configId="GradleRunConfiguration" name="ProductServiceTest">
        <ExternalSystemSettings>
            <option name="executionName"/>
            <option name="externalProjectPath" value="C:/Users/Genti/Desktop/Final"/>
            <option name="externalSystemIdString" value="GRADLE"/>
            <option name="scriptParameters" value=""/>
            <option name="taskDescriptions">
                <list/>
            </option>
            <option name="taskNames">
                <list>
                    <option value=":test"/>
                    <option value="--tests"/>
                    <option value="&quot;com.JavaProject.Final.Service.ProductServiceTest&quot;"/>
                </list>
            </option>
            <option name="vmOptions"/>
        </ExternalSystemSettings>
        <ExternalSystemDebugServerProcess/>
        <ExternalSystemReattachDebugProcess/>
        <DebugAllEnabled/>
        <method v="2"/>
    </config>
    <suite duration="812" locationUrl="java:suite://com.JavaProject.Final.Service.ProductServiceTest" name="ProductServiceTest" status="passed">
        <test duration="668" locationUrl="java:test://com.JavaProject.Final.Service.ProductServiceTest.checkStockTest" name="checkStockTest()" status="passed">
            <output type="stdout">Hibernate: select p1_0.product_id from products p1_0 where p1_0.product_name=? limit ?&#13;
Hibernate: insert into products (product_name, product_price, prodct_type, stock) values (?, ?, ?, ?)&#13;
Hibernate: select p1_0.product_id,p1_0.product_name,p1_0.product_price,p1_0.prodct_type,p1_0.stock from products p1_0 where p1_0.product_id=?&#13;
Hibernate: update products set stock=(stock+?) where product_id=?&#13;
</output>
        </test>
        <test duration="65" locationUrl="java:test://com.JavaProject.Final.Service.ProductServiceTest.updatePriceTest" name="updatePriceTest()" status="passed">
            <output type="stdout">Hibernate: select p1_0.product_id from products p1_0 where p1_0.product_name=? limit ?&#13;
Hibernate: insert into products (product_name, product_price, prodct_type, stock) values (?, ?, ?, ?)&#13;
Hibernate: select p1_0.product_id,p1_0.product_name,p1_0.product_price,p1_0.prodct_type,p1_0.stock from products p1_0 where p1_0.product_id=?&#13;
Hibernate: select count(*) from products p1_0 where p1_0.product_id=?&#13;
Hibernate: update products set product_price=? where product_id=?&#13;
Hibernate: select p1_0.product_id,p1_0.product_name,p1_0.product_price,p1_0.prodct_type,p1_0.stock from products p1_0 where p1_0.product_id=?&#13;
</output>
        </test>
        <test duration="37" locationUrl="java:test://com.JavaProject.Final.Service.ProductServiceTest.updateProductStockTest" name="updateProductStockTest()" status="passed">
            <output type="stdout">Hibernate: select p1_0.product_id from products p1_0 where p1_0.product_name=? limit ?&#13;
Hibernate: insert into products (product_name, product_price, prodct_type, stock) values (?, ?, ?, ?)&#13;
Hibernate: select p1_0.product_id,p1_0.product_name,p1_0.product_price,p1_0.prodct_type,p1_0.stock from products p1_0 where p1_0.product_id=?&#13;
Hibernate: select count(*) from products p1_0 where p1_0.product_id=?&#13;
Hibernate: update products set stock=(stock+?) where product_id=?&#13;
Hibernate: select p1_0.product_id,p1_0.product_name,p1_0.product_price,p1_0.prodct_type,p1_0.stock from products p1_0 where p1_0.product_id=?&#13;
</output>
        </test>
        <test duration="42" locationUrl="java:test://com.JavaProject.Final.Service.ProductServiceTest.testSaveProductFromDTO" name="testSaveProductFromDTO()" status="passed">
            <output type="stdout">Hibernate: select p1_0.product_id from products p1_0 where p1_0.product_name=? limit ?&#13;
Hibernate: insert into products (product_name, product_price, prodct_type, stock) values (?, ?, ?, ?)&#13;
Hibernate: select p1_0.product_id from products p1_0 where p1_0.product_name=? limit ?&#13;
</output>
        </test>
    </suite>
</testrun>
